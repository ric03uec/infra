- hosts: devbox
  become: true
  tasks:
    - name: include variables for devbox instances
      include_vars:
        file: devbox.yml
        name: devbox

    - name: update hostname
      hostname:
        name: "{{ devbox.hostname }}"

    - name: update hostname in /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1[ \t]+localhost'
        line: '127.0.0.1 localhost {{ devbox.hostname }}'
        state: present

    - name: disable ssh with password on the host
      lineinfile:
        dest: /etc/ssh/ssh_config
        regexp: '#   PasswordAuthentication yes'
        line: '    PasswordAuthentication no'
        state: present

    - name: create group {{ devbox.username }}
      group:
        name: "{{ devbox.username }}"
        gid: 1002
        state: present

    - name: create group for docker, will be used after docker installation
      group:
        name: docker
        gid: 1003
        state: present

    - name: create user {{ devbox.username }}
      user:
        name: "{{ devbox.username }}"
        uid: 1002
        state: present
        append: yes
        group: "{{ devbox.username }}"
        groups: sudo,admin,docker
        create_home: yes
        shell: /bin/zsh
        generate_ssh_key: yes
        ssh_key_file: ".ssh/id_rsa_{{ devbox.username }}"

    - name: append all public keys with .public extension to authorized_keys file
      authorized_key:
        user: "{{ devbox.username }}"
        state: present
        manage_dir: yes
        key: "{{ lookup('file', item) }}"
      with_fileglob:
        - "/ansible/keys/*.public"

    - name: find all private keys
      find:
        paths: /ansible/keys
        patterns: '*.private'
      delegate_to: 127.0.0.1
      register: local_private_keys

    - name: copy all private keys with .private extension to .ssh folder
      copy:
        src: "{{ item.path }}"
        dest: /home/{{ devbox.username }}/.ssh/
        owner: "{{ devbox.username }}"
      with_items: "{{ local_private_keys.files }}"
      when: local_private_keys.matched > 0

    - name: apt update
      apt: update_cache=yes

    - name: install core packages
      apt:
        name:  "{{ item }}"
        state: present
      with_items:
        - cmake
        - zsh
        - apt-transport-https
        - ca-certificates
        - curl

    - name: install python development packages
      apt:
        name:  "{{ item }}"
        state: present
      with_items:
        - software-properties-common
        - python-dev
        - python-pip
        - python3-dev
        - python3-pip
        - python-minimal

- hosts: devbox
  become: true
  tasks:
    - name: include variables for devbox instances
      include_vars:
        file: devbox.yml
        name: devbox

    - name: install random number generator management tools
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - rng-tools
        - tmux
        - htop
        - git-core
        - git-extras

    - name: add nvim repository
      apt_repository:
        repo: ppa:neovim-ppa/stable
        state: present

    - name: install neovim
      apt:
        update_cache: yes
        name: neovim
        state: present

    - name: add docker apt-key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker repository in apt
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable

    - name: install docker
      apt:
        update_cache: yes
        name: docker-ce=18.06.1~ce~3-0~ubuntu
        state: present

    - name: update home folder ownership
      file:
        dest: /home/{{ devbox.username }}
        owner: "{{ devbox.username }}"
        group: "{{ devbox.username }}"
        recurse: yes

- hosts: devbox
  become: true
  become_user: "{{ devbox.username }}"
  tasks:
    - name: include variables for devbox instances
      include_vars:
        file: devbox.yml
        name: devbox

    - name: Cloning oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh
        dest: /home/{{ devbox.username }}/.oh-my-zsh

    - name: Create new ~/.zshrc from template
      vars:
        username: "{{ devbox.username }}"
      template:
        src: templates/zshrc.template.j2
        dest: /home/{{ devbox.username }}/.zshrc

- hosts: devbox
  become: true
  become_user: "{{ devbox.username }}"
  tasks:
    - name: include variables for devbox instances
      include_vars:
        file: devbox.yml
        name: devbox

    - name: clone tmux config
      git:
        repo: https://github.com/tony/tmux-config.git
        dest: /home/{{ devbox.username }}/.tmux
        force: yes

    - name: override tmux config with custom changes
      template:
        src: templates/tmux.conf.template.j2
        dest: /home/{{ devbox.username }}/.tmux/.tmux.conf

    - name: create a symlink for tmux configuration
      file:
        src: /home/{{ devbox.username }}/.tmux/.tmux.conf
        dest: /home/{{ devbox.username }}/.tmux.conf
        state: link

    - name: install tmux-resurrect plugin
      git:
        repo: https://github.com/tmux-plugins/tmux-resurrect.git
        dest: /home/{{ devbox.username }}/.tmux/vendor/tmux-resurrect
        depth: 1

- hosts: devbox
  become: true
  become_user: "{{ devbox.username }}"
  tasks:
    - name: include variables for devbox instances
      include_vars:
        file: devbox.yml
        name: devbox

    - name: install python support for neovim
      pip:
        name: neovim
        state: latest
        executable: pip

    - name: install python support for neovim using pip2
      pip:
        name: neovim
        state: latest
        executable: pip2

    - name: install python support for neovim using pip3
      pip:
        name: neovim
        state: latest
        executable: pip3

    - name: configure neovim
      git:
        repo: https://github.com/ric03uec/.vim
        dest: /home/{{ devbox.username }}/.config/nvim
        force: yes

    - name: configure YCM
      shell: /home/{{ devbox.username }}/.config/nvim/bundle/YouCompleteMe/install.py
      args:
        executable: /bin/bash

